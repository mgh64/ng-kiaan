//
//
// mostafa

var db = require('db');
var byAddEdit = require('functions/by/addEdit');
var miladi_code = require('functions/miladi_code');
var newOperationId = require('functions/newOperationId/new');

module.exports = function(invoice, cb) {

  cb = cb || function() {};
  if (!invoice) {
    cb({
      status: 400,
      message: "low args"
    });
  } else {
    //
    if (invoice.type &&
      invoice.person_id &&
      invoice.items.length &&
      invoice.creator_id
    ) {
      //
      // console.log('ASD');
      invoice = String.remove_empty_data(invoice);
      if (invoice.items && invoice.items.length > 0) {
        for (var i = 0; i < invoice.items.length; i++) {
          if (invoice.items[i].value) {
            switch (invoice.type) {
              case 'buy':
                invoice.items[i].value = Math.abs(Number.NumtoEn(invoice.items[i].value));
                break;
              case 'sale':
                invoice.items[i].value = -Math.abs(Number.NumtoEn(invoice.items[i].value));
                break;
            }
          } else if (invoice.type == 'sale' && invoice.items[i].cost_id) {
            invoice.items[i].price = Math.abs(Number.NumtoEn(invoice.items[i].price));
          } else if (invoice.type == 'sale' && invoice.items[i].income_id) {
            invoice.items[i].price = -Math.abs(Number.NumtoEn(invoice.items[i].price));
          } else {
            invoice.items[i].price = Number.NumtoEn(invoice.items[i].price);
          }
        }
      }
      //
      By(invoice, function(err, new_invoice) {
        if (err) throw err;
        if (new_invoice) {
          if (!new_invoice._id) {
            //add
            add(new_invoice, cb);
          } else {
            //edit
            db.operations.findOne({
              _id: new_invoice._id
            }, function(err, _invoice) {
              if (err) throw err;
              if (_invoice) {
                //require fields
                ['person_id', 'items'].forEach(function(attr) {
                  if (new_invoice[attr])
                    _invoice[attr] = new_invoice[attr];
                });
                //optional fields
                ['type', 'by_id', 'comment'].forEach(function(attr) {
                  _invoice[attr] = new_invoice[attr];
                });
                //
                _invoice.save(function(err, r) {
                  if (err) {
                    throw err;
                  } else {
                    cb(null, {
                      edit: true
                    });
                  }
                });
                //
              } else {
                next({
                  status: 404
                });
              }
            })
            //end edit
          }
        }

      });
    } else {
      cb(null, {
        not_valid: true
      });
    }

  }
}

function By(data, cb) {

  cb = cb || function() {};
  if ((!data.by_id || data.by_id == null || data.by_id == undefined) && data.by_title) {

    data.by_title = String.editPersianCh(data.by_title);

    byAddEdit({
      person_id: data.person_id,
      title: data.by_title
    }, function(err, res) {
      if (err) throw error;
      if (res) {
        data.by_id = res.by_id;
        delete data.by_title;
        //
        cb(null, data);
      }
    })

  } else {
    if (data.by_id == null) {
      delete data.by_id
    }
    cb(null, data);
  }

}

function get_invoiceId(cb) {
  cb = cb || function() {};

  newOperationId(function(err, res) {
    if (err) throw error;
    if (res) {
      // console.log(res);
      cb(null, res);
    }
  })
}

function add(invoice, cb) {
  cb = cb || function() {};
  //add_invoice
  get_invoiceId(function(err, res) {
    if (err) {
      cb(null, {
        error: true,
        type: 'get_invoiceId'
      })
    } else if (res) {
      invoice.id = res;
      new db.operations(invoice).save(function(err) {
        // error with db
        if (err) {
          cb({
            status: 400,
            error_obj: err
          }, null);
        } else {
          // save
          cb(null, {
            add: true
          });
        }
      });
    }
  });
}
