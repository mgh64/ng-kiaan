//
//
//
var mongoose = require('mongoose');
var db = require('db');

module.exports = function(data, cb) {

  cb = cb || function() {};

  if (!data) {
    cb({
      status: 400,
      message: "low args"
    });
  } else {
    data = String.remove_empty_data(data);
    //
    validate(data, function(status) {
      switch (status.valid) {
        case true:
          if (status.data && !status.data._id) {
            //add
            db.branches.findOne({
              bank_id: status.data.bank_id,
              id: status.data.id,
              title: status.data.title
            }, {
              _id: true
            }).lean().exec(function(err, branch_exists) {
              if (err) {
                cb({
                  status: 500,
                  error_obj: err
                });
              } else if (branch_exists) {
                cb(null, {
                  exists: true
                });
              } else {
                add(status.data, function(err, status) {
                  cb(err, status);
                });
              }
            });
          } else if (status.data && status.data._id) {
            //edit
            db.branches.findOne({
              _id: status.data._id
            }, function(err, _bank) {
              if (err) throw err;
              if (_bank) {
                //require fields
                ['title']
                .forEach(function(attr) {
                  if (status.data[attr]) {
                    _bank[attr] = status.data[attr];
                  }
                });
                //optional fields
                ['comment'].forEach(function(attr) {
                  _bank[attr] = status.data[attr];
                });
                //
                _bank.save(function(err, r) {
                  if (err) {
                    throw err;
                  } else {
                    //
                    cb(null, {
                      edit: true
                    });
                  }
                });
                //
              } else {
                next({
                  status: 404
                });
              }
            })
            //end edit
          }
          break;
        case false:
          cb(null, {
            add: false,
            adit: false,
            not_valid: true
          })
          break;
      }
    });
    //
  }
}


function add(data, cb) {
  cb = cb || function() {};
  //add_bankacc
  new db.branches(data).save(function(err) {
    // error with db
    if (err) {
      cb({
        status: 400,
        error_obj: err
      }, null);
    } else {
      // save
      cb(null, {
        add: true
      });
    }
  });
};

function validate(data, cb) {

  cb = cb || function() {};

  if (data &&
    data.bank_id &&
    data.id &&
    data.title &&
    data.creator_id
  ) {
    data.title = String.editPersianCh(data.title);
    // if (data.comment)
    //   data.comment = String.editPersianCh(data.comment);
    //
    cb({
      data: data,
      valid: true
    });

  } else {
    cb({
      valid: false
    });
  }
};
