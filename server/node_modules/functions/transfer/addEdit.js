//
//
//
var db = require('db');
var convert_date = require('date');
var mongoose = require('mongoose');
var byAddEdit = require('functions/by/addEdit');
var miladi_code = require('functions/miladi_code')
var newOperationId = require('functions/newOperationId/new');

module.exports = function(data, cb) {

  cb = cb || function() {};

  if (!data) {
    cb({
      status: 400,
      message: "low args"
    });
  } else {
    data = String.remove_empty_data(data);
    //validate
    validate(data, function(status) {
      if (status.valid == true) {
        // data = status.data;
        // console.open(data);
        if (!status.transfer._id) {
          //add
          console.log('add');
          // console.open(data.debtor);
          // console.open(data.creditor);
          add(status.transfer, cb);
        } else {
          //edit
          console.log('Edit');
          db.operations.findOne({
            _id: status.transfer._id
          }, function(err, _transfer) {
            if (err) throw err;
            if (_transfer) {
              //require fields
              ['type', 'items'].forEach(function(attr) {
                if (status.transfer[attr])
                  _transfer[attr] = status.transfer[attr];
              });
              //optional fields
              // ['comment'].forEach(function(attr) {
              //   _transfer[attr] = new_transfer[attr];
              // });
              //
              _transfer.save(function(err, r) {
                if (err) {
                  throw err;
                } else {
                  cb(null, {
                    edit: true
                  });
                }
              });
              //
            } else {
              next({
                status: 404
              });
            }
          })
          //end edit
        }
      } else {
        cb(null, {
          add: false,
          adit: false,
          not_valid: true
        });
      }
    });
    //
  }
}

function get_transferId(cb) {
  cb = cb || function() {};
  newOperationId(function(err, res) {
    if (err) throw error;
    if (res) {
      // console.log(res);
      cb(null, res);
    }
  })
}

function add(data, cb) {
  cb = cb || function() {};
  //add_transfer
  get_transferId(function(err, res) {
    if (err) {
      cb(null, {
        error: true,
        type: 'get_transferId'
      })
    } else if (res) {
      data.id = res;
      new db.operations(data).save(function(err) {
        if (err) {
          cb({
            status: 400,
            error_obj: err
          }, null);
        } else {
          // save
          cb(null, {
            add: true
          });
        }
      });

    }
  });
}

function validate(data, cb) {
  cb = cb || function() {};

  // console.open(data);
  if (!data ||
    !data.type ||
    !data.price ||
    (data.type != 'c2b' && !data.debtor_id) ||
    (data.type != 'b2c' && !data.creator_id) ||
    !data.creator_id
  ) {
    return cb({
      valid: false
    });
  }
  var transfer = {
    type: data.type,
    creator_id: data.creator_id,
    items: [{}, {}]
  }
  data.price = Math.abs(Number.NumtoEn(data.price));
  if (data._id) transfer._id = data._id;
  transfer.items[0].comment = data.debtor_comment;
  transfer.items[1].comment = data.creditor_comment;
  switch (data.type) {
    case 'p2p':
      transfer.items[0].person_id = data.debtor_id;
      transfer.items[0].price = -data.price;
      //
      transfer.items[1].person_id = data.creditor_id;
      transfer.items[1].price = data.price;
      break;
    case 'c2b':
      transfer.items[0].type = "cash";
      transfer.items[0].price = -data.price;
      //
      transfer.items[1].bankacc_id = data.creditor_id;
      transfer.items[1].price = data.price;
      break;
    case 'b2c':
      transfer.items[0].bankacc_id = data.debtor_id;
      transfer.items[0].price = -data.price;
      //
      transfer.items[1].type = "cash";
      transfer.items[1].price = data.price;
      break;
    case 'b2b':
      transfer.items[0].bankacc_id = data.debtor_id;
      transfer.items[0].price = -data.price;
      //
      transfer.items[1].bankacc_id = data.creditor_id;
      transfer.items[1].price = data.price;
      break;
    case 'c2p':
      transfer.items[0].cost_id = data.debtor_id;
      transfer.items[0].price = data.price;
      //
      transfer.items[1].person_id = data.creditor_id;
      transfer.items[1].price = data.price;
      break;
    case 'p2i':
      transfer.items[0].person_id = data.debtor_id;
      transfer.items[0].price = -data.price;
      //
      transfer.items[1].income_id = data.creditor_id;
      transfer.items[1].price = -data.price;
      break;
  };
  //
  // console.open(transfer);
  cb({
    transfer: transfer,
    valid: true
  });


};
