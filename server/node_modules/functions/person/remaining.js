//
//
// by : mostafa
"use strict";

const mongoose = require('mongoose');
const db = require('db');
// const encrypt = require('encrypt');
// const date_to_persian = require('functions/date_to_persian');

module.exports = function(data, cb) {

  cb = cb || function() {};
  if (!data) {
    cb({
      status: 400,
      message: "low args"
    });
  } else {
    //
    // console.open(data);
    var match = {
      $match: {
        $or: [{
          person_id: mongoose.Types.ObjectId(data)
        }, {
          "items.person_id": mongoose.Types.ObjectId(data)
        }]
      }
    };
    var unwind = {
      $unwind: '$items'
    };
    var match2 = {
      $match: {
        $or: [{
          $and: [{
            type: {
              $ne: "cheque_ft"
            }
          }, {
            "items.status": {
              $ne: "od"
            }
          }]
        }, {
          $and: [{
            type: "cheque_ft"
          }, {
            "items.status": "od"
          }]
        }]
      }
    }
    var group = {
      $group: {
        _id: {
          person_id: {
            $ifNull: ['$person_id', '$items.person_id']
          }
        },
        sum: {
          $sum: {
            $cond: {
              if: {
                $ne: ["$type", "cheque_ft"]
              },
              then: {
                $multiply: [{
                  $ifNull: ['$items.value', 1]
                }, '$items.price']
              },
              else: {
                $subtract: [
                  0,
                  '$items.price'
                ]
              }
            }
          }
        }
      }
    };
    var project = {
      $project: {
        _id: false,
        person_id: '$_id.person_id',
        // sum: '$sum'
        remaining: {
          $subtract: [
            0,
            '$sum'
          ]
        }
      }
    };

    var agg = [];

    agg.push(match);
    agg.push(unwind);
    agg.push(match);  //for transfer
    agg.push(match2);
    agg.push(group);
    agg.push(project);

    db.operations.aggregate(
      agg
    ).exec(function(err, result) {
      if (err) console.log(err);
      if (result) {
        db.persons.populate(result, {
          path: 'person_id',
          select: 'first_name last_name id credit_limit'
        }, function(err, info) {
          if (err) throw err;
          if (info) {
            // console.open(info);
            info[0].remaining = Math.round(info[0].remaining);
            return cb(null, info[0])
            // res.json(info);
          }
        })
      }
    });
  }

}
